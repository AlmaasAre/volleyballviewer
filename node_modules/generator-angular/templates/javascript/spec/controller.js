'use strict';

describe('Controller: <%= _.classify(name) %>Ctrl', function () {

  var <%= _.classify(name) %>Ctrl, scope;

  beforeEach(function() {
    module('<%= _.camelize(appname) %>App');

    inject(function ($controller, $rootScope) {
      scope = $rootScope.$new();
      <%= _.classify(name) %>Ctrl = $controller('<%= _.classify(name) %>Ctrl', {
        $scope: scope,
        modelBinder: function(scope, attr) {
            scope[attr]='Awesomesauce!';
            return {
                then: function (cb) {
                    cb();
                }
            }
        }
      });
    });

  });

  it('should attach a test message to the scope', function () {
    expect(scope.page).toEqual('Awesomesauce!');
  });
});

describe('Service: <%= _.classify(name) %>CtrlInit', function () {

  var <%= _.classify(name) %>CtrlInit, dataService;

  dataService = {
    Pages: {
      getById: function() {
        return {
          then: function() {
            return {
              then: function() {}
            }
          }
        }
      }
    }
  };

  beforeEach(function() {
    module('volleyballviewerApp', function($provide) {

      //Shimmed route
      $provide.decorator('$route',function($delegate) {
        
        //$route.current.params.id set to 5 for testing purposes
        //$delegate.current = {params:{id:5}};

        return $delegate;
      });

      //Shimmed dataService
      $provide.decorator('dataService', function($delegate) {

        $delegate.Pages = dataService.Pages;

        spyOn($delegate.Pages, 'getById').andCallThrough();

        return $delegate;
      });

    });

    inject(function (_<%= _.classify(name) %>CtrlInit_) {
      <%= _.classify(name) %>CtrlInit = _<%= _.classify(name) %>CtrlInit_;
    });

  });

  it('should have a prepare function', function () {
    expect(typeof <%= _.classify(name) %>CtrlInit.prepare).toEqual('function');
  });

  it('should return a promise', function() {
    expect(typeof <%= _.classify(name) %>CtrlInit.prepare().then).toEqual('function');
  });

  it('should do a call to the dataService', function() {
    <%= _.classify(name) %>CtrlInit.prepare();
    expect(dataService.Pages.getById).toHaveBeenCalledWith('new');
  });

});